<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MoveVelocityCommand" Id="{b7ef6bbd-677a-4a49-9732-7d6bdc2cffe8}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK INTERNAL MoveVelocityCommand EXTENDS MoveCommand
VAR
	_fb : MC_MoveVelocity;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{9f167e26-87ad-4e45-88bb-635a3e14b8fd}" />
    <Method Name="FB_init" Id="{05ce250b-772e-48da-93e3-13b833c254d3}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	axisRef : REFERENCE TO Axis;
	velocity : LREAL;
	acceleration : LREAL;
	deceleration : LREAL;
	jerk : LREAL;
	bufferMode : AxisBufferMode;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_axisRef REF= axisRef;
_velocity := velocity;
_acceleration := acceleration;
_deceleration := deceleration;
_jerk := jerk;
_bufferMode := bufferMode;]]></ST>
      </Implementation>
    </Method>
    <Method Name="WhileBusy" Id="{9339af6b-18d8-4c9e-a691-9cd16e0e009b}">
      <Declaration><![CDATA[METHOD PROTECTED WhileBusy
VAR_INPUT
	CommandState : I_CommandBusyState;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_fb(
	Axis := _axisRef._InternalAxisRef,
	Execute := TRUE,
	Velocity := _velocity,
	Acceleration := _acceleration,
	Deceleration := _deceleration,
	Jerk := _jerk,
	BufferMode := _bufferMode
);

IF _fb.Busy THEN
	RETURN;
END_IF

IF _fb.CommandAborted THEN
	_fb(Axis := _axisRef._InternalAxisRef, Execute := FALSE);
	CommandState.SetAborting();
	RETURN;
END_IF

IF _fb.Error THEN
	_fb(Axis := _axisRef._InternalAxisRef, Execute := FALSE);
	CommandState.SetError(_fb.ErrorID);
	RETURN;
END_IF

_fb(Axis := _axisRef._InternalAxisRef, Execute := FALSE);
CommandState.SetDone();]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="MoveVelocityCommand">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="MoveVelocityCommand.FB_init">
      <LineId Id="9" Count="0" />
      <LineId Id="30" Count="2" />
      <LineId Id="34" Count="0" />
      <LineId Id="24" Count="0" />
    </LineIds>
    <LineIds Name="MoveVelocityCommand.WhileBusy">
      <LineId Id="10" Count="0" />
      <LineId Id="26" Count="2" />
      <LineId Id="42" Count="2" />
      <LineId Id="38" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="57" Count="16" />
      <LineId Id="19" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>